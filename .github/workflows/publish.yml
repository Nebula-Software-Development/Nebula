# .github/workflows/publish.yml

name: publish

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '*'
  release:
    types:
      - published

env:
  NuGetDirectory: ${{ github.workspace }}/nuget

jobs:
  create_nuget:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install NuGet CLI
    - name: Setup NuGet CLI
      run: |
        $url = "https://dist.nuget.org/win-x86-commandline/latest/nuget.exe"
        $nuget_destination = "${HOME}/bin/nuget.exe"
        Invoke-WebRequest -Uri $url -OutFile $nuget_destination
        echo "NuGet CLI installed to $nuget_destination"

    # Create the NuGet package
    - name: Create NuGet package
      run: |
        $nuget_path = "${HOME}/bin/nuget.exe"
        & $nuget_path pack Nebuli/Nebuli.csproj -Prop Configuration=Release -OutputDirectory ${{ env.NuGetDirectory }}
        echo "NuGet package created."

    # Publish the NuGet package as an artifact
    - uses: actions/upload-artifact@v3
      with:
        name: nuget
        if-no-files-found: error
        retention-days: 7
        path: ${{ env.NuGetDirectory }}/*.nupkg

  validate_nuget:
    runs-on: ubuntu-latest
    needs: [ create_nuget ]
    steps:
    - name: Setup NuGet CLI
      run: |
        $url = "https://dist.nuget.org/win-x86-commandline/latest/nuget.exe"
        $nuget_destination = "${HOME}/bin/nuget.exe"
        Invoke-WebRequest -Uri $url -OutFile $nuget_destination
        echo "NuGet CLI installed to $nuget_destination"

    # Download the NuGet package created in the previous job
    - uses: actions/download-artifact@v3
      with:
        name: nuget
        path: ${{ env.NuGetDirectory }}

    # Validate the NuGet package
    # You can replace "YourPackageName" with the actual package name if needed
    - name: Validate package
      run: |
        $nuget_path = "${HOME}/bin/nuget.exe"
        & $nuget_path validate ${{ env.NuGetDirectory }}/*.nupkg

  run_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    # Run tests
    - name: Run tests
      run: dotnet test -c Release Nebuli/Nebuli.csproj

  deploy:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    needs: [ validate_nuget, run_test ]
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: nuget
        path: ${{ env.NuGetDirectory }}

    # Publish all NuGet packages to NuGet.org
    # Use --skip-duplicate to prevent errors if a package with the same version already exists.
    # If you retry a failed workflow, already published packages will be skipped without error.
    - name: Publish NuGet package
      run: |
        $nuget_path = "${HOME}/bin/nuget.exe"
        foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Recurse -Include *.nupkg)) {
            & $nuget_path push $file -ApiKey "${{ secrets.NUGET_APIKEY }}" -Source https://api.nuget.org/v3/index.json -SkipDuplicate
        }
