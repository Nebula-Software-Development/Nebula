name: Build Nebuli/master

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest
    
    env:
       NEBULI_DOWNLOAD_URL: https://cdn.cedmod.nl/files/References.zip
       NEBULIREFERENCES: D:\a\Nebuli\Nebuli\References
       PROJECT_FOLDER: Nebuli
       Solution_Name: Nebuli.sln
       Solution_Path: D:\a\Nebuli\Nebuli\Nebuli\Nebuli.sln
       Project_Path: Nebuli/Nebuli.csproj


    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core SDK
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.306'

    # Fetch the required Nebuli references
    - name: Get Nebuli references
      shell: pwsh
      run: |
        Invoke-WebRequest -Uri $env:NEBULI_DOWNLOAD_URL -OutFile "$env:NEBULIREFERENCES.zip"
        Expand-Archive -Path "$env:NEBULIREFERENCES.zip" -DestinationPath $env:NEBULIREFERENCES

    # List contents of the NebuliReferences folder (optional, for verification)
    - name: List Contents of NebuliReferences folder
      run: |
        Get-ChildItem -Path $env:NEBULIREFERENCES -Recurse

    # Download and setup NuGet
    - name: Download and Setup NuGet
      uses: NuGet/setup-nuget@v1.1.1

    # Restore NuGet packages
    - name: Restore NuGet packages
      run: nuget restore ${{ env.Solution_Name }}
      
    - name: Download and Setup MSBuild
      uses: microsoft/setup-msbuild@v1.0.2
      
    # Restore the application to populate the obj folder with RuntimeIdentifiers
    - name: Restore the application
      run: msbuild $env:Solution_Name /t:Restore /p:Configuration=$env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
        
    - name: Build the app
      run: msbuild $env:Project_Path /p:Configuration=$env:Configuration
      env:
        Project_Path: ${{ env.Project_Path }}
        Configuration: ${{ matrix.configuration }}
    
    # Upload the app
    - name: Upload release results
      uses: actions/upload-artifact@v3
      with:
        name: Release Build
        path: ${{ env.PROJECT_FOLDER }}\bin\Release\Nebuli.dll
    
    - name: Upload debug results
      uses: actions/upload-artifact@v3
      with:
        name: Debug Build
        path: ${{ env.PROJECT_FOLDER }}\bin\Debug\Nebuli.dll
